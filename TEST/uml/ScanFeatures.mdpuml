@startuml Button2_Scan_Feature_Structural

!theme plain
skinparam backgroundColor #FFFFFF
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 600

skinparam sequence {
    GroupBackgroundColor #FFE4E1
    GroupBorderColor #DC143C
    GroupBorderThickness 2
}

title Button 2: Scan Feature (TEST_Btn2) - Structural Flow

actor User #87CEEB
participant "AddinUi" as UI #98FB98
participant "CreateHoleFeature" as HoleFeature #FFB6C1
participant "CadFeaturesManager" as CadMgr #98FB98
participant "Condition" as Condition #E0FFFF
participant "Esprit.Application" as Esprit #D3D3D3

== Button Click Event ==
User -> UI : Click "Scan Feature" button (TEST_Btn2)
activate UI #98FB98
UI -> HoleFeature : new CreateHoleFeature(app)
activate HoleFeature #FFB6C1

== Condition Setup ==
HoleFeature -> Condition : Create conditions
activate Condition #E0FFFF
note Right of Condition
    **Example - Hole :**
    • Standard = "ISO"
    • Type = "Drill Size"
      -> From the CadFeature Property
end note
Condition --> HoleFeature : Condition objects
deactivate Condition

== CAD Features Analysis ==
HoleFeature -> CadMgr : new CadFeaturesManager(app)
activate CadMgr #98FB98

group Feature Recognition Loop [#FFEBEE]
    HoleFeature -> CadMgr : FindCadFeaturesByProps(Conditions)
    CadMgr -> CadMgr : GetallCadFeatures()
    CadMgr -> Esprit : GetCadFeaturesFromFaces()
    
    loop for each CadFeature
        CadMgr -> Condition : IsMatch(property)
        activate Condition #E0FFFF
        Condition --> CadMgr : match result
        deactivate Condition
    end
    
    CadMgr --> HoleFeature : List<SolidFace>
end

== Feature Creation ==
group Create Features [#E6E6FA]
    HoleFeature -> Esprit : CreateHoleFeatures2(List<SolidFace>)
    HoleFeature -> HoleFeature : HandleComFaults()
end

deactivate CadMgr
HoleFeature --> UI : Feature creation complete
deactivate HoleFeature
UI --> User : Process complete
deactivate UI

@enduml