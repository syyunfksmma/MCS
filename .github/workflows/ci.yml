name: CI

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "Manual trigger reason"
        required: false
        default: "manual run required"
  # ~~old~~ push:
  #   branches: [ main, v1 ]
  # ~~old~~ pull_request:
  #   branches: [ main, v1 ]

permissions:
  contents: read
  packages: write   # ghcr 푸시용

jobs:
  # NOTE: Automatic CI triggers disabled on 2025-09-25; manual dispatch only.
  build:
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_CHANNEL: chromium
      PLAYWRIGHT_BROWSERS_PATH: 0
      LOCAL_IMAGE: mcs-portal:ci
      REGISTRY: ghcr.io
      REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/mcs-portal

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web/mcs-portal/package-lock.json

      - name: Install dependencies
        working-directory: web/mcs-portal
        run: npm install

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: web/mcs-portal/node_modules/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('web/mcs-portal/package-lock.json') }}

      - name: Install Playwright browsers
        working-directory: web/mcs-portal
        run: npm run playwright:install-offline

      - name: Lint
        working-directory: web/mcs-portal
        run: npm run lint

      - name: Format Check
        working-directory: web/mcs-portal
        run: npx prettier --check "src/**/*.{ts,tsx,css}"

      - name: Build
        working-directory: web/mcs-portal
        run: npm run build

      - name: Playwright smoke tests
        working-directory: web/mcs-portal
        env:
          PLAYWRIGHT_E2E: "true"
        run: npm run test:e2e -- --grep "@smoke"

      - name: Accessibility smoke tests
        working-directory: web/mcs-portal
        env:
          PLAYWRIGHT_E2E: "true"
        run: npm run test:axe

      - name: Install k6
        uses: grafana/setup-k6@v1

      - name: Start Next.js server for performance smoke
        working-directory: web/mcs-portal
        shell: bash
        run: |
          npm run start -- --hostname 127.0.0.1 --port 3101 &
          SERVER_PID=$!
          echo $SERVER_PID > ../.perf-server.pid
          npx wait-on http://127.0.0.1:3101

      - name: k6 workspace smoke
        working-directory: web/mcs-portal
        env:
          BASE_URL: http://127.0.0.1:3101
        run: k6 run scripts/performance/k6-workspace.js --vus 10 --duration 45s

      - name: Stop Next.js performance server
        if: always()
        working-directory: web/mcs-portal
        shell: bash
        run: |
          if [ -f ../.perf-server.pid ]; then
            kill $(cat ../.perf-server.pid) 2>/dev/null || true
            rm ../.perf-server.pid
          fi

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: web/mcs-portal/playwright-report/
          if-no-files-found: ignore

      - name: Upload E2E artifacts (raw)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts
          path: |
            web/mcs-portal/test-results/
            web/mcs-portal/playwright-report/
          if-no-files-found: ignore

      - name: Build Docker image
        working-directory: web/mcs-portal
        run: docker build -t ${{ env.LOCAL_IMAGE }} .

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        working-directory: web/mcs-portal
        run: |
          docker tag ${{ env.LOCAL_IMAGE }} ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
