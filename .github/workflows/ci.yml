name: CI

on:
  push:
    branches: [ main, v1 ]
  pull_request:
    branches: [ main, v1 ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_CHANNEL: chromium
      LOCAL_IMAGE: mcs-portal:ci
      REGISTRY: ghcr.io
      REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/mcs-portal
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: web/mcs-portal
        run: npm install

      - name: Install Playwright browsers
        working-directory: web/mcs-portal
        run: npx playwright install --with-deps

      - name: Lint
        working-directory: web/mcs-portal
        run: npm run lint

      - name: Format Check
        working-directory: web/mcs-portal
        run: npx prettier --check "src/**/*.{ts,tsx,css}"

      - name: Build
        working-directory: web/mcs-portal
        run: npm run build

      - name: End-to-end tests
        working-directory: web/mcs-portal
        run: npm run test:e2e

      - name: Build Docker image
        working-directory: web/mcs-portal
        run: docker build -t ${{ env.LOCAL_IMAGE }} .

      - name: Log in to registry
        if: ${{ secrets.REGISTRY_USERNAME != '' && secrets.REGISTRY_PASSWORD != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Docker image
        if: ${{ secrets.REGISTRY_USERNAME != '' && secrets.REGISTRY_PASSWORD != '' }}
        working-directory: web/mcs-portal
        run: |
          docker tag ${{ env.LOCAL_IMAGE }} ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
